<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxeh="clr-namespace:DevExpress.Xpf.Editors.Helpers;assembly=DevExpress.Xpf.Core.v10.2"
                    xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    >

    <Thickness x:Key="ButtonEditThemeKey_ButtonEditPadding">1,0,0,0</Thickness>
    <SolidColorBrush x:Key="TextEditThemeKey_NullTextForeground" Color="#6D6D6D" />
    <dxc:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />

    <LinearGradientBrush x:Key="FocusFrameBrush">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="Red" Offset="0" />
            <GradientStop Color="Orange" Offset="0.8" />
        </LinearGradientBrush.GradientStops>
        <LinearGradientBrush.RelativeTransform>
            <ScaleTransform />
        </LinearGradientBrush.RelativeTransform>
    </LinearGradientBrush>
    
    <Style x:Key="FocusFrameRectangle" TargetType="Rectangle">
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="RadiusX" Value="2" />
        <Setter Property="RadiusY" Value="2" />
        <Setter Property="Stroke" Value="{StaticResource FocusFrameBrush}" />
        <Setter Property="Grid.Column" Value="0" />
        <Setter Property="Grid.ColumnSpan" Value="2" />
    </Style>

    <ControlTemplate x:Key="TextEditThemeKey_Template" TargetType="dxe:TextEdit">
        <ContentControl Template="{TemplateBinding ActualBorderTemplate}" x:Name="PART_Root" dxc:FocusHelper2.Focusable="False">
            <ContentControl.Resources>
                <dxc:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            </ContentControl.Resources>
            <dxeh:ControlHelper.ClearDefaultStyleKey>
                <sys:Boolean>True</sys:Boolean>
            </dxeh:ControlHelper.ClearDefaultStyleKey>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="EnabledStates">
                    <VisualState x:Name="Enabled" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.35" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Grid UseLayoutRounding="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <dxe:ErrorControl x:Name="PART_ErrorPresenter" />
                <dxe:EditorControl Grid.Column="1" x:Name="PART_Content" Template="{TemplateBinding ActualEditorControlTemplate}" />
                <Rectangle Name="FocusFrame"
                           Style="{StaticResource FocusFrameRectangle}" 
                           Visibility="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}" />
            </Grid>
        </ContentControl>
    </ControlTemplate>

    <Style x:Key="PasswordBoxEditThemeKey_NullTextEditorStyle" TargetType="TextBlock">

        <Setter Property="Padding" Value="2,0,2,0" />
        <Setter Property="Margin" Value="2,1,2,1" />

        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Foreground" Value="{StaticResource TextEditThemeKey_NullTextForeground}" />
        <Setter Property="dx:DXStyleHelper.BindableSetters">
            <Setter.Value>
                <dx:DXBindableSetterCollection>
                    <dx:DXBindableSetter Property="VerticalAlignment">
                        <dx:DXBindableSetter.Binding>
                            <Binding Path="VerticalContentAlignment" RelativeSource="{RelativeSource TemplatedParent}" />
                        </dx:DXBindableSetter.Binding>
                    </dx:DXBindableSetter>
                </dx:DXBindableSetterCollection>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="PasswordBoxEditThemeKey_Template" TargetType="dxe:PasswordBoxEdit">
        <Grid x:Name="PART_Root">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="EnabledStates">
                    <VisualState x:Name="Enabled" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.35" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ReadOnlyStates">
                    <VisualState x:Name="Editable" />
                    <VisualState x:Name="ReadOnly" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentControl Background="{TemplateBinding Background}" Template="{TemplateBinding ActualBorderTemplate}" IsTabStop="False" x:Name="Border" dxeh:ControlHelper.ClearDefaultStyleKey="True">
                <ContentControl.Resources>
                    <dxc:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
                </ContentControl.Resources>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <dxe:ErrorControl x:Name="PART_ErrorPresenter" Grid.Column="0" />
                    <Grid Grid.Column="1">
                        <dxe:EditorControl x:Name="PART_Content" Padding="{TemplateBinding Padding}" Template="{TemplateBinding ActualEditorControlTemplate}" />
                        <Border IsHitTestVisible="false" Background="{TemplateBinding Background}" Margin="{Binding Path=Margin, ElementName=PART_PasswordNullText}" Padding="{Binding Path=Padding, ElementName=PART_PasswordNullText}">
                            <Border.Visibility>
                                <Binding Path="IsNullTextVisible" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.Converter>
                                        <dxc:BooleanToVisibilityConverter />
                                    </Binding.Converter>
                                </Binding>
                            </Border.Visibility>
                        </Border>
                        <TextBlock x:Name="PART_PasswordNullText" Text="{Binding Path=NullText, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource PasswordBoxEditThemeKey_NullTextEditorStyle}">
                            <TextBlock.Visibility>
                                <Binding Path="IsNullTextVisible" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.Converter>
                                        <dxc:BooleanToVisibilityConverter />
                                    </Binding.Converter>
                                </Binding>
                            </TextBlock.Visibility>
                        </TextBlock>
                        <Rectangle Name="FocusFrame"
                                   Style="{StaticResource FocusFrameRectangle}" 
                                   Visibility="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}" />
                    </Grid>
                </Grid>
            </ContentControl>
        </Grid>

    </ControlTemplate>

    <ControlTemplate x:Key="ButtonEditThemeKey_Template" TargetType="dxe:ButtonEdit">
        <ContentControl x:Name="PART_Root" Template="{TemplateBinding ActualBorderTemplate}" IsTabStop="False">

            <dxeh:ControlHelper.ClearDefaultStyleKey>
                <sys:Boolean>True</sys:Boolean>
            </dxeh:ControlHelper.ClearDefaultStyleKey>

            <ContentControl.Resources>
                <dxc:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />

                <ControlTemplate x:Key="HideTextBorderContentTemplate" TargetType="ContentControl">
                    <Grid Margin="{StaticResource ButtonEditThemeKey_ButtonEditPadding}">
                        <Grid.Resources>
                            <dxc:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
                        </Grid.Resources>
                        <dxe:EditorControl x:Name="PART_Content" Opacity="0" VerticalAlignment="Stretch" Template="{Binding ActualEditorControlTemplate}" />
                        <dxe:ButtonsControl x:Name="PART_Buttons" ItemsSource="{Binding SortedButtons}" Visibility="{Binding ShowEditorButtons, Converter={StaticResource BoolToVisibilityConverter}}">
                            <dxe:ButtonsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <dxe:ButtonsPanel />
                                </ItemsPanelTemplate>
                            </dxe:ButtonsControl.ItemsPanel>
                        </dxe:ButtonsControl>
                    </Grid>
                </ControlTemplate>
                <ControlTemplate x:Key="ShowTextBorderContentTemplate" TargetType="ContentControl">
                    <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Cursor="{TemplateBinding Cursor}" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                </ControlTemplate>

            </ContentControl.Resources>

            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="EnabledStates">
                    <VisualState x:Name="Enabled" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.35" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid UseLayoutRounding="False">
                <ContentControl x:Name="BorderContent" HorizontalContentAlignment="Stretch" IsTabStop="False" VerticalContentAlignment="Stretch" dxeh:ControlHelper.ClearDefaultStyleKey="True">

                    <Grid x:Name="ButtonEditGrid" UseLayoutRounding="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <dxe:ErrorControl x:Name="PART_ErrorPresenter" />
                        <dxe:ButtonsControl x:Name="PART_LeftButtons" Grid.Column="1" ItemsSource="{TemplateBinding LeftButtons}" Visibility="{Binding ShowEditorButtons, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                        <dxe:EditorControl x:Name="PART_Content" VerticalAlignment="Stretch" Grid.Column="2" dxc:FocusHelper2.Focusable="False" Template="{TemplateBinding ActualEditorControlTemplate}" />
                        <dxe:ButtonsControl x:Name="PART_RightButtons" Grid.Column="3" ItemsSource="{TemplateBinding RightButtons}" Visibility="{Binding ShowEditorButtons, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>

                </ContentControl>
                <Rectangle Name="FocusFrame"
                           Style="{StaticResource FocusFrameRectangle}" 
                           Visibility="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}" />
            </Grid>
        </ContentControl>

    </ControlTemplate>

    <Style TargetType="dxe:TextEdit">
        <Setter Property="Template" Value="{StaticResource TextEditThemeKey_Template}" />
    </Style>

    <Style TargetType="dxe:PasswordBoxEdit">
        <Setter Property="Template" Value="{StaticResource PasswordBoxEditThemeKey_Template}" />
    </Style>

    <Style TargetType="dxe:ButtonEdit">
        <Setter Property="Template" Value="{StaticResource ButtonEditThemeKey_Template}" />
    </Style>

    <Style TargetType="dxe:ComboBoxEdit">
        <Setter Property="Template" Value="{StaticResource ButtonEditThemeKey_Template}" />
    </Style>

    <Style TargetType="dxe:PopupCalcEdit">
        <Setter Property="Template" Value="{StaticResource ButtonEditThemeKey_Template}" />
    </Style>

    <Style TargetType="dxe:SpinEdit">
        <Setter Property="Template" Value="{StaticResource ButtonEditThemeKey_Template}" />
    </Style>

    <Style TargetType="dxg:LookUpEdit">
        <Setter Property="Template" Value="{StaticResource ButtonEditThemeKey_Template}" />
    </Style>
</ResourceDictionary>
